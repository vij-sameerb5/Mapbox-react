{"ast":null,"code":"'use strict';\n\nvar xtend = require('xtend');\nvar v = require('@mapbox/fusspot');\nfunction file(value) {\n  // If we're in a browser so Blob is available, the file must be that.\n  // In Node, however, it could be a filepath or a pipeable (Readable) stream.\n  if (typeof window !== 'undefined') {\n    if (value instanceof global.Blob || value instanceof global.ArrayBuffer) {\n      return;\n    }\n    return 'Blob or ArrayBuffer';\n  }\n  if (typeof value === 'string' || value.pipe !== undefined) {\n    return;\n  }\n  return 'Filename or Readable stream';\n}\nfunction assertShape(validatorObj, apiName) {\n  return v.assert(v.strictShape(validatorObj), apiName);\n}\nfunction date(value) {\n  var msg = 'date';\n  if (typeof value === 'boolean') {\n    return msg;\n  }\n  try {\n    var date = new Date(value);\n    if (date.getTime && isNaN(date.getTime())) {\n      return msg;\n    }\n  } catch (e) {\n    return msg;\n  }\n}\nfunction coordinates(value) {\n  return v.tuple(v.number, v.number)(value);\n}\nmodule.exports = xtend(v, {\n  file: file,\n  date: date,\n  coordinates: coordinates,\n  assertShape: assertShape\n});","map":{"version":3,"names":["xtend","require","v","file","value","window","global","Blob","ArrayBuffer","pipe","undefined","assertShape","validatorObj","apiName","assert","strictShape","date","msg","Date","getTime","isNaN","e","coordinates","tuple","number","module","exports"],"sources":["/Users/sameershaik/Desktop/mapbox-react/node_modules/@mapbox/mapbox-sdk/services/service-helpers/validator.js"],"sourcesContent":["'use strict';\n\nvar xtend = require('xtend');\nvar v = require('@mapbox/fusspot');\n\nfunction file(value) {\n  // If we're in a browser so Blob is available, the file must be that.\n  // In Node, however, it could be a filepath or a pipeable (Readable) stream.\n  if (typeof window !== 'undefined') {\n    if (value instanceof global.Blob || value instanceof global.ArrayBuffer) {\n      return;\n    }\n    return 'Blob or ArrayBuffer';\n  }\n  if (typeof value === 'string' || value.pipe !== undefined) {\n    return;\n  }\n  return 'Filename or Readable stream';\n}\n\nfunction assertShape(validatorObj, apiName) {\n  return v.assert(v.strictShape(validatorObj), apiName);\n}\n\nfunction date(value) {\n  var msg = 'date';\n  if (typeof value === 'boolean') {\n    return msg;\n  }\n  try {\n    var date = new Date(value);\n    if (date.getTime && isNaN(date.getTime())) {\n      return msg;\n    }\n  } catch (e) {\n    return msg;\n  }\n}\n\nfunction coordinates(value) {\n  return v.tuple(v.number, v.number)(value);\n}\n\nmodule.exports = xtend(v, {\n  file: file,\n  date: date,\n  coordinates: coordinates,\n  assertShape: assertShape\n});\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC5B,IAAIC,CAAC,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAElC,SAASE,IAAIA,CAACC,KAAK,EAAE;EACnB;EACA;EACA,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IACjC,IAAID,KAAK,YAAYE,MAAM,CAACC,IAAI,IAAIH,KAAK,YAAYE,MAAM,CAACE,WAAW,EAAE;MACvE;IACF;IACA,OAAO,qBAAqB;EAC9B;EACA,IAAI,OAAOJ,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACK,IAAI,KAAKC,SAAS,EAAE;IACzD;EACF;EACA,OAAO,6BAA6B;AACtC;AAEA,SAASC,WAAWA,CAACC,YAAY,EAAEC,OAAO,EAAE;EAC1C,OAAOX,CAAC,CAACY,MAAM,CAACZ,CAAC,CAACa,WAAW,CAACH,YAAY,CAAC,EAAEC,OAAO,CAAC;AACvD;AAEA,SAASG,IAAIA,CAACZ,KAAK,EAAE;EACnB,IAAIa,GAAG,GAAG,MAAM;EAChB,IAAI,OAAOb,KAAK,KAAK,SAAS,EAAE;IAC9B,OAAOa,GAAG;EACZ;EACA,IAAI;IACF,IAAID,IAAI,GAAG,IAAIE,IAAI,CAACd,KAAK,CAAC;IAC1B,IAAIY,IAAI,CAACG,OAAO,IAAIC,KAAK,CAACJ,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE;MACzC,OAAOF,GAAG;IACZ;EACF,CAAC,CAAC,OAAOI,CAAC,EAAE;IACV,OAAOJ,GAAG;EACZ;AACF;AAEA,SAASK,WAAWA,CAAClB,KAAK,EAAE;EAC1B,OAAOF,CAAC,CAACqB,KAAK,CAACrB,CAAC,CAACsB,MAAM,EAAEtB,CAAC,CAACsB,MAAM,CAAC,CAACpB,KAAK,CAAC;AAC3C;AAEAqB,MAAM,CAACC,OAAO,GAAG1B,KAAK,CAACE,CAAC,EAAE;EACxBC,IAAI,EAAEA,IAAI;EACVa,IAAI,EAAEA,IAAI;EACVM,WAAW,EAAEA,WAAW;EACxBX,WAAW,EAAEA;AACf,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}