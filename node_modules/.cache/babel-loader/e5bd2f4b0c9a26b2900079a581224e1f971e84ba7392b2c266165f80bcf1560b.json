{"ast":null,"code":"'use strict';\n\n// Encode each item of an array individually. The comma\n// delimiters should not themselves be encoded.\nfunction encodeArray(arrayValue) {\n  return arrayValue.map(encodeURIComponent).join(',');\n}\nfunction encodeValue(value) {\n  if (Array.isArray(value)) {\n    return encodeArray(value);\n  }\n  return encodeURIComponent(String(value));\n}\n\n/**\n * Append a query parameter to a URL.\n *\n * @param {string} url\n * @param {string} key\n * @param {string|number|boolean|Array<*>>} [value] - Provide an array\n *   if the value is a list and commas between values need to be\n *   preserved, unencoded.\n * @returns {string} - Modified URL.\n */\nfunction appendQueryParam(url, key, value) {\n  if (value === false || value === null) {\n    return url;\n  }\n  var punctuation = /\\?/.test(url) ? '&' : '?';\n  var query = encodeURIComponent(key);\n  if (value !== undefined && value !== '' && value !== true) {\n    query += '=' + encodeValue(value);\n  }\n  return '' + url + punctuation + query;\n}\n\n/**\n * Derive a query string from an object and append it\n * to a URL.\n *\n * @param {string} url\n * @param {Object} [queryObject] - Values should be primitives.\n * @returns {string} - Modified URL.\n */\nfunction appendQueryObject(url, queryObject) {\n  if (!queryObject) {\n    return url;\n  }\n  var result = url;\n  Object.keys(queryObject).forEach(function (key) {\n    var value = queryObject[key];\n    if (value === undefined) {\n      return;\n    }\n    if (Array.isArray(value)) {\n      value = value.filter(function (v) {\n        return v !== null && v !== undefined;\n      }).join(',');\n    }\n    result = appendQueryParam(result, key, value);\n  });\n  return result;\n}\n\n/**\n * Prepend an origin to a URL. If the URL already has an\n * origin, do nothing.\n *\n * @param {string} url\n * @param {string} origin\n * @returns {string} - Modified URL.\n */\nfunction prependOrigin(url, origin) {\n  if (!origin) {\n    return url;\n  }\n  if (url.slice(0, 4) === 'http') {\n    return url;\n  }\n  var delimiter = url[0] === '/' ? '' : '/';\n  return '' + origin.replace(/\\/$/, '') + delimiter + url;\n}\n\n/**\n * Interpolate values into a route with express-style,\n * colon-prefixed route parameters.\n *\n * @param {string} route\n * @param {Object} [params] - Values should be primitives\n *   or arrays of primitives. Provide an array if the value\n *   is a list and commas between values need to be\n *   preserved, unencoded.\n * @returns {string} - Modified URL.\n */\nfunction interpolateRouteParams(route, params) {\n  if (!params) {\n    return route;\n  }\n  return route.replace(/\\/:([a-zA-Z0-9]+)/g, function (_, paramId) {\n    var value = params[paramId];\n    if (value === undefined) {\n      throw new Error('Unspecified route parameter ' + paramId);\n    }\n    var preppedValue = encodeValue(value);\n    return '/' + preppedValue;\n  });\n}\nmodule.exports = {\n  appendQueryObject: appendQueryObject,\n  appendQueryParam: appendQueryParam,\n  prependOrigin: prependOrigin,\n  interpolateRouteParams: interpolateRouteParams\n};","map":{"version":3,"names":["encodeArray","arrayValue","map","encodeURIComponent","join","encodeValue","value","Array","isArray","String","appendQueryParam","url","key","punctuation","test","query","undefined","appendQueryObject","queryObject","result","Object","keys","forEach","filter","v","prependOrigin","origin","slice","delimiter","replace","interpolateRouteParams","route","params","_","paramId","Error","preppedValue","module","exports"],"sources":["/Users/sameershaik/Desktop/mapbox-react/node_modules/@mapbox/mapbox-sdk/lib/helpers/url-utils.js"],"sourcesContent":["'use strict';\n\n// Encode each item of an array individually. The comma\n// delimiters should not themselves be encoded.\nfunction encodeArray(arrayValue) {\n  return arrayValue.map(encodeURIComponent).join(',');\n}\n\nfunction encodeValue(value) {\n  if (Array.isArray(value)) {\n    return encodeArray(value);\n  }\n  return encodeURIComponent(String(value));\n}\n\n/**\n * Append a query parameter to a URL.\n *\n * @param {string} url\n * @param {string} key\n * @param {string|number|boolean|Array<*>>} [value] - Provide an array\n *   if the value is a list and commas between values need to be\n *   preserved, unencoded.\n * @returns {string} - Modified URL.\n */\nfunction appendQueryParam(url, key, value) {\n  if (value === false || value === null) {\n    return url;\n  }\n  var punctuation = /\\?/.test(url) ? '&' : '?';\n  var query = encodeURIComponent(key);\n  if (value !== undefined && value !== '' && value !== true) {\n    query += '=' + encodeValue(value);\n  }\n  return '' + url + punctuation + query;\n}\n\n/**\n * Derive a query string from an object and append it\n * to a URL.\n *\n * @param {string} url\n * @param {Object} [queryObject] - Values should be primitives.\n * @returns {string} - Modified URL.\n */\nfunction appendQueryObject(url, queryObject) {\n  if (!queryObject) {\n    return url;\n  }\n\n  var result = url;\n  Object.keys(queryObject).forEach(function(key) {\n    var value = queryObject[key];\n    if (value === undefined) {\n      return;\n    }\n    if (Array.isArray(value)) {\n      value = value\n        .filter(function(v) {\n          return v !== null && v !== undefined;\n        })\n        .join(',');\n    }\n    result = appendQueryParam(result, key, value);\n  });\n  return result;\n}\n\n/**\n * Prepend an origin to a URL. If the URL already has an\n * origin, do nothing.\n *\n * @param {string} url\n * @param {string} origin\n * @returns {string} - Modified URL.\n */\nfunction prependOrigin(url, origin) {\n  if (!origin) {\n    return url;\n  }\n\n  if (url.slice(0, 4) === 'http') {\n    return url;\n  }\n\n  var delimiter = url[0] === '/' ? '' : '/';\n  return '' + origin.replace(/\\/$/, '') + delimiter + url;\n}\n\n/**\n * Interpolate values into a route with express-style,\n * colon-prefixed route parameters.\n *\n * @param {string} route\n * @param {Object} [params] - Values should be primitives\n *   or arrays of primitives. Provide an array if the value\n *   is a list and commas between values need to be\n *   preserved, unencoded.\n * @returns {string} - Modified URL.\n */\nfunction interpolateRouteParams(route, params) {\n  if (!params) {\n    return route;\n  }\n  return route.replace(/\\/:([a-zA-Z0-9]+)/g, function(_, paramId) {\n    var value = params[paramId];\n    if (value === undefined) {\n      throw new Error('Unspecified route parameter ' + paramId);\n    }\n    var preppedValue = encodeValue(value);\n    return '/' + preppedValue;\n  });\n}\n\nmodule.exports = {\n  appendQueryObject: appendQueryObject,\n  appendQueryParam: appendQueryParam,\n  prependOrigin: prependOrigin,\n  interpolateRouteParams: interpolateRouteParams\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}