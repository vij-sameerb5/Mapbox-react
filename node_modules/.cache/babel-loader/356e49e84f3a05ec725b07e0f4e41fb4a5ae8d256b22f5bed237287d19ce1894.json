{"ast":null,"code":"'use strict';\n\n// Like https://github.com/thlorenz/lib/parse-link-header but without any\n// additional dependencies.\nfunction parseParam(param) {\n  var parts = param.match(/\\s*(.+)\\s*=\\s*\"?([^\"]+)\"?/);\n  if (!parts) return null;\n  return {\n    key: parts[1],\n    value: parts[2]\n  };\n}\nfunction parseLink(link) {\n  var parts = link.match(/<?([^>]*)>(.*)/);\n  if (!parts) return null;\n  var linkUrl = parts[1];\n  var linkParams = parts[2].split(';');\n  var rel = null;\n  var parsedLinkParams = linkParams.reduce(function (result, param) {\n    var parsed = parseParam(param);\n    if (!parsed) return result;\n    if (parsed.key === 'rel') {\n      if (!rel) {\n        rel = parsed.value;\n      }\n      return result;\n    }\n    result[parsed.key] = parsed.value;\n    return result;\n  }, {});\n  if (!rel) return null;\n  return {\n    url: linkUrl,\n    rel: rel,\n    params: parsedLinkParams\n  };\n}\n\n/**\n * Parse a Link header.\n *\n * @param {string} linkHeader\n * @returns {{\n *   [string]: {\n *     url: string,\n *     params: { [string]: string }\n *   }\n * }}\n */\nfunction parseLinkHeader(linkHeader) {\n  if (!linkHeader) return {};\n  return linkHeader.split(/,\\s*</).reduce(function (result, link) {\n    var parsed = parseLink(link);\n    if (!parsed) return result;\n    // rel value can be multiple whitespace-separated rels.\n    var splitRel = parsed.rel.split(/\\s+/);\n    splitRel.forEach(function (rel) {\n      if (!result[rel]) {\n        result[rel] = {\n          url: parsed.url,\n          params: parsed.params\n        };\n      }\n    });\n    return result;\n  }, {});\n}\nmodule.exports = parseLinkHeader;","map":{"version":3,"names":["parseParam","param","parts","match","key","value","parseLink","link","linkUrl","linkParams","split","rel","parsedLinkParams","reduce","result","parsed","url","params","parseLinkHeader","linkHeader","splitRel","forEach","module","exports"],"sources":["/Users/sameershaik/Desktop/mapbox-react/node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-link-header.js"],"sourcesContent":["'use strict';\n\n// Like https://github.com/thlorenz/lib/parse-link-header but without any\n// additional dependencies.\n\nfunction parseParam(param) {\n  var parts = param.match(/\\s*(.+)\\s*=\\s*\"?([^\"]+)\"?/);\n  if (!parts) return null;\n\n  return {\n    key: parts[1],\n    value: parts[2]\n  };\n}\n\nfunction parseLink(link) {\n  var parts = link.match(/<?([^>]*)>(.*)/);\n  if (!parts) return null;\n\n  var linkUrl = parts[1];\n  var linkParams = parts[2].split(';');\n  var rel = null;\n  var parsedLinkParams = linkParams.reduce(function(result, param) {\n    var parsed = parseParam(param);\n    if (!parsed) return result;\n    if (parsed.key === 'rel') {\n      if (!rel) {\n        rel = parsed.value;\n      }\n      return result;\n    }\n    result[parsed.key] = parsed.value;\n    return result;\n  }, {});\n  if (!rel) return null;\n\n  return {\n    url: linkUrl,\n    rel: rel,\n    params: parsedLinkParams\n  };\n}\n\n/**\n * Parse a Link header.\n *\n * @param {string} linkHeader\n * @returns {{\n *   [string]: {\n *     url: string,\n *     params: { [string]: string }\n *   }\n * }}\n */\nfunction parseLinkHeader(linkHeader) {\n  if (!linkHeader) return {};\n\n  return linkHeader.split(/,\\s*</).reduce(function(result, link) {\n    var parsed = parseLink(link);\n    if (!parsed) return result;\n    // rel value can be multiple whitespace-separated rels.\n    var splitRel = parsed.rel.split(/\\s+/);\n    splitRel.forEach(function(rel) {\n      if (!result[rel]) {\n        result[rel] = {\n          url: parsed.url,\n          params: parsed.params\n        };\n      }\n    });\n    return result;\n  }, {});\n}\n\nmodule.exports = parseLinkHeader;\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AAEA,SAASA,UAAUA,CAACC,KAAK,EAAE;EACzB,IAAIC,KAAK,GAAGD,KAAK,CAACE,KAAK,CAAC,2BAA2B,CAAC;EACpD,IAAI,CAACD,KAAK,EAAE,OAAO,IAAI;EAEvB,OAAO;IACLE,GAAG,EAAEF,KAAK,CAAC,CAAC,CAAC;IACbG,KAAK,EAAEH,KAAK,CAAC,CAAC;EAChB,CAAC;AACH;AAEA,SAASI,SAASA,CAACC,IAAI,EAAE;EACvB,IAAIL,KAAK,GAAGK,IAAI,CAACJ,KAAK,CAAC,gBAAgB,CAAC;EACxC,IAAI,CAACD,KAAK,EAAE,OAAO,IAAI;EAEvB,IAAIM,OAAO,GAAGN,KAAK,CAAC,CAAC,CAAC;EACtB,IAAIO,UAAU,GAAGP,KAAK,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,GAAG,CAAC;EACpC,IAAIC,GAAG,GAAG,IAAI;EACd,IAAIC,gBAAgB,GAAGH,UAAU,CAACI,MAAM,CAAC,UAASC,MAAM,EAAEb,KAAK,EAAE;IAC/D,IAAIc,MAAM,GAAGf,UAAU,CAACC,KAAK,CAAC;IAC9B,IAAI,CAACc,MAAM,EAAE,OAAOD,MAAM;IAC1B,IAAIC,MAAM,CAACX,GAAG,KAAK,KAAK,EAAE;MACxB,IAAI,CAACO,GAAG,EAAE;QACRA,GAAG,GAAGI,MAAM,CAACV,KAAK;MACpB;MACA,OAAOS,MAAM;IACf;IACAA,MAAM,CAACC,MAAM,CAACX,GAAG,CAAC,GAAGW,MAAM,CAACV,KAAK;IACjC,OAAOS,MAAM;EACf,CAAC,EAAE,CAAC,CAAC,CAAC;EACN,IAAI,CAACH,GAAG,EAAE,OAAO,IAAI;EAErB,OAAO;IACLK,GAAG,EAAER,OAAO;IACZG,GAAG,EAAEA,GAAG;IACRM,MAAM,EAAEL;EACV,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,eAAeA,CAACC,UAAU,EAAE;EACnC,IAAI,CAACA,UAAU,EAAE,OAAO,CAAC,CAAC;EAE1B,OAAOA,UAAU,CAACT,KAAK,CAAC,OAAO,CAAC,CAACG,MAAM,CAAC,UAASC,MAAM,EAAEP,IAAI,EAAE;IAC7D,IAAIQ,MAAM,GAAGT,SAAS,CAACC,IAAI,CAAC;IAC5B,IAAI,CAACQ,MAAM,EAAE,OAAOD,MAAM;IAC1B;IACA,IAAIM,QAAQ,GAAGL,MAAM,CAACJ,GAAG,CAACD,KAAK,CAAC,KAAK,CAAC;IACtCU,QAAQ,CAACC,OAAO,CAAC,UAASV,GAAG,EAAE;MAC7B,IAAI,CAACG,MAAM,CAACH,GAAG,CAAC,EAAE;QAChBG,MAAM,CAACH,GAAG,CAAC,GAAG;UACZK,GAAG,EAAED,MAAM,CAACC,GAAG;UACfC,MAAM,EAAEF,MAAM,CAACE;QACjB,CAAC;MACH;IACF,CAAC,CAAC;IACF,OAAOH,MAAM;EACf,CAAC,EAAE,CAAC,CAAC,CAAC;AACR;AAEAQ,MAAM,CAACC,OAAO,GAAGL,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}