{"ast":null,"code":"'use strict';\n\nvar MapiClient = require('../../lib/classes/mapi-client');\n// This will create the environment-appropriate client.\nvar createClient = require('../../lib/client');\nfunction createServiceFactory(ServicePrototype) {\n  return function (clientOrConfig) {\n    var client;\n    if (MapiClient.prototype.isPrototypeOf(clientOrConfig)) {\n      client = clientOrConfig;\n    } else {\n      client = createClient(clientOrConfig);\n    }\n    var service = Object.create(ServicePrototype);\n    service.client = client;\n    return service;\n  };\n}\nmodule.exports = createServiceFactory;","map":{"version":3,"names":["MapiClient","require","createClient","createServiceFactory","ServicePrototype","clientOrConfig","client","prototype","isPrototypeOf","service","Object","create","module","exports"],"sources":["/Users/sameershaik/Desktop/mapbox-react/node_modules/@mapbox/mapbox-sdk/services/service-helpers/create-service-factory.js"],"sourcesContent":["'use strict';\n\nvar MapiClient = require('../../lib/classes/mapi-client');\n// This will create the environment-appropriate client.\nvar createClient = require('../../lib/client');\n\nfunction createServiceFactory(ServicePrototype) {\n  return function(clientOrConfig) {\n    var client;\n    if (MapiClient.prototype.isPrototypeOf(clientOrConfig)) {\n      client = clientOrConfig;\n    } else {\n      client = createClient(clientOrConfig);\n    }\n    var service = Object.create(ServicePrototype);\n    service.client = client;\n    return service;\n  };\n}\n\nmodule.exports = createServiceFactory;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,+BAA+B,CAAC;AACzD;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAE9C,SAASE,oBAAoBA,CAACC,gBAAgB,EAAE;EAC9C,OAAO,UAASC,cAAc,EAAE;IAC9B,IAAIC,MAAM;IACV,IAAIN,UAAU,CAACO,SAAS,CAACC,aAAa,CAACH,cAAc,CAAC,EAAE;MACtDC,MAAM,GAAGD,cAAc;IACzB,CAAC,MAAM;MACLC,MAAM,GAAGJ,YAAY,CAACG,cAAc,CAAC;IACvC;IACA,IAAII,OAAO,GAAGC,MAAM,CAACC,MAAM,CAACP,gBAAgB,CAAC;IAC7CK,OAAO,CAACH,MAAM,GAAGA,MAAM;IACvB,OAAOG,OAAO;EAChB,CAAC;AACH;AAEAG,MAAM,CAACC,OAAO,GAAGV,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}