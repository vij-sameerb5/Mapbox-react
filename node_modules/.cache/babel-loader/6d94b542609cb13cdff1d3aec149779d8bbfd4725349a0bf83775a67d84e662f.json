{"ast":null,"code":"var _jsxFileName = \"/Users/sameershaik/Desktop/mapbox-react/src/mapbox-gl/MapboxGl.js\",\n  _s = $RefreshSig$();\n// src/mapbox-gl/MapboxGl.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';\nimport { circle as turfCircle, union as turfUnion, distance as turfDistance, midpoint as turfMidpoint } from '@turf/turf';\nimport '../App.css';\n\n// Token from .env\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_TOKEN;\nexport default function MapboxGl() {\n  _s();\n  const mapContainer = useRef(null);\n  const mapRef = useRef(null);\n  const popupRef = useRef(new mapboxgl.Popup({\n    className: 'quake-popup',\n    closeButton: false,\n    closeOnClick: false\n  }));\n  const lastQuakesRef = useRef(null);\n  const spinRef = useRef(true);\n  const [projection, setProjection] = useState('globe');\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/satellite-v9',\n      projection: projection,\n      center: [0, 20],\n      zoom: 1.5,\n      antialias: true\n    });\n    mapRef.current = map;\n\n    // Geocoder control\n    map.addControl(new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken,\n      mapboxgl\n    }), 'top-left');\n    map.on('load', () => {\n      map.setFog({});\n      fetchAndUpdate(true);\n      const interval = setInterval(() => fetchAndUpdate(false), 60000);\n      startSpin();\n      map.on('mousemove', 'quake-points', onHover);\n      map.on('mouseleave', 'quake-points', onLeave);\n      return () => {\n        clearInterval(interval);\n        map.remove();\n      };\n    });\n\n    // Cleanup function\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.remove();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (mapRef.current) {\n      mapRef.current.setProjection({\n        name: projection\n      });\n    }\n  }, [projection]);\n  async function fetchAndUpdate(initial) {\n    const map = mapRef.current;\n    const past30 = new Date(Date.now() - 30 * 24 * 3600 * 1000).toISOString().split('T')[0];\n    const url = `https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=${past30}&minmagnitude=5`;\n    const res = await fetch(url);\n    const data = await res.json();\n\n    // New quake notifications\n    if (!initial) {\n      var _lastQuakesRef$curren;\n      const prevIds = (((_lastQuakesRef$curren = lastQuakesRef.current) === null || _lastQuakesRef$curren === void 0 ? void 0 : _lastQuakesRef$curren.features) || []).map(f => f.id);\n      data.features.forEach(f => {\n        if (!prevIds.includes(f.id) && f.properties.mag >= 5) {\n          Notification.permission === 'granted' ? new Notification(`M${f.properties.mag.toFixed(1)} quake`, {\n            body: f.properties.place\n          }) : Notification.requestPermission();\n        }\n      });\n    }\n\n    // Update or add quake-points layer\n    if (initial) {\n      map.addSource('quake-points', {\n        type: 'geojson',\n        data\n      });\n      map.addLayer({\n        id: 'quake-points',\n        type: 'circle',\n        source: 'quake-points',\n        paint: {\n          'circle-color': '#E55E5E',\n          'circle-opacity': 0.8,\n          'circle-radius': ['interpolate', ['linear'], ['get', 'mag'], 5, 6, 8, 12, 10, 20]\n        }\n      });\n    } else {\n      map.getSource('quake-points').setData(data);\n    }\n\n    // Build buffers for risk-area\n    const buffers = data.features.filter(f => f.geometry && Array.isArray(f.geometry.coordinates)).map(f => turfCircle(f.geometry.coordinates, 20, {\n      steps: 64,\n      units: 'kilometers'\n    }));\n    let zoneData;\n    if (buffers.length === 0) {\n      zoneData = {\n        type: 'FeatureCollection',\n        features: []\n      };\n    } else {\n      // union all buffers, skipping any union errors\n      let unioned = buffers[0];\n      for (let i = 1; i < buffers.length; i++) {\n        try {\n          unioned = turfUnion(unioned, buffers[i]);\n        } catch (err) {\n          console.warn('Skipping invalid union at index', i, err);\n        }\n      }\n      zoneData = {\n        type: 'FeatureCollection',\n        features: [unioned]\n      };\n    }\n\n    // Update or add risk-area layer\n    if (initial) {\n      map.addSource('risk-area', {\n        type: 'geojson',\n        data: zoneData\n      });\n      map.addLayer({\n        id: 'risk-area-fill',\n        type: 'fill',\n        source: 'risk-area',\n        paint: {\n          'fill-color': 'rgba(255,0,0,0.2)',\n          'fill-outline-color': 'rgba(255,0,0,0.6)'\n        }\n      });\n    } else {\n      map.getSource('risk-area').setData(zoneData);\n    }\n    lastQuakesRef.current = data;\n  }\n  function onHover(e) {\n    const {\n      properties,\n      geometry\n    } = e.features[0];\n    const coords = geometry.coordinates.slice();\n    const date = new Date(properties.time).toLocaleString();\n    popupRef.current.setLngLat(coords).setHTML(`<strong>${properties.place}</strong><br/>Mag: ${properties.mag.toFixed(1)}<br/>${date}`).addTo(mapRef.current);\n  }\n  function onLeave() {\n    popupRef.current.remove();\n  }\n  function startSpin() {\n    const map = mapRef.current;\n    let frame;\n    const animate = () => {\n      if (!spinRef.current) return;\n      const c = map.getCenter();\n      map.jumpTo({\n        center: [c.lng - 0.05, c.lat]\n      });\n      frame = requestAnimationFrame(animate);\n    };\n    animate();\n    return () => cancelAnimationFrame(frame);\n  }\n  function toggleSpin() {\n    spinRef.current = !spinRef.current;\n    if (spinRef.current) startSpin();\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      id: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Projection:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: projection,\n          onChange: e => setProjection(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"globe\",\n            children: \"Globe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mercator\",\n            children: \"Mercator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"winkelTripel\",\n            children: \"Winkel-Tripel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"robinson\",\n            children: \"Robinson\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleSpin,\n        children: \"Toggle Rotation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MapboxGl, \"j3OhccC5CXJYp8aQNOCZyHCqwwA=\");\n_c = MapboxGl;\nvar _c;\n$RefreshReg$(_c, \"MapboxGl\");","map":{"version":3,"names":["React","useEffect","useRef","useState","mapboxgl","MapboxGeocoder","circle","turfCircle","union","turfUnion","distance","turfDistance","midpoint","turfMidpoint","jsxDEV","_jsxDEV","Fragment","_Fragment","accessToken","process","env","REACT_APP_MAPBOX_TOKEN","MapboxGl","_s","mapContainer","mapRef","popupRef","Popup","className","closeButton","closeOnClick","lastQuakesRef","spinRef","projection","setProjection","map","Map","container","current","style","center","zoom","antialias","addControl","on","setFog","fetchAndUpdate","interval","setInterval","startSpin","onHover","onLeave","clearInterval","remove","name","initial","past30","Date","now","toISOString","split","url","res","fetch","data","json","_lastQuakesRef$curren","prevIds","features","f","id","forEach","includes","properties","mag","Notification","permission","toFixed","body","place","requestPermission","addSource","type","addLayer","source","paint","getSource","setData","buffers","filter","geometry","Array","isArray","coordinates","steps","units","zoneData","length","unioned","i","err","console","warn","e","coords","slice","date","time","toLocaleString","setLngLat","setHTML","addTo","frame","animate","c","getCenter","jumpTo","lng","lat","requestAnimationFrame","cancelAnimationFrame","toggleSpin","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/Users/sameershaik/Desktop/mapbox-react/src/mapbox-gl/MapboxGl.js"],"sourcesContent":["// src/mapbox-gl/MapboxGl.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';\nimport { circle as turfCircle, union as turfUnion, distance as turfDistance, midpoint as turfMidpoint } from '@turf/turf';\nimport '../App.css';\n\n// Token from .env\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_TOKEN;\n\nexport default function MapboxGl() {\n  const mapContainer = useRef(null);\n  const mapRef = useRef(null);\n  const popupRef = useRef(\n    new mapboxgl.Popup({ className: 'quake-popup', closeButton: false, closeOnClick: false })\n  );\n  const lastQuakesRef = useRef(null);\n  const spinRef = useRef(true);\n  const [projection, setProjection] = useState('globe');\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/satellite-v9',\n      projection: projection,\n      center: [0, 20],\n      zoom: 1.5,\n      antialias: true,\n    });\n    mapRef.current = map;\n\n    // Geocoder control\n    map.addControl(\n      new MapboxGeocoder({ accessToken: mapboxgl.accessToken, mapboxgl }),\n      'top-left'\n    );\n\n    map.on('load', () => {\n      map.setFog({});\n      fetchAndUpdate(true);\n      const interval = setInterval(() => fetchAndUpdate(false), 60_000);\n      startSpin();\n      map.on('mousemove', 'quake-points', onHover);\n      map.on('mouseleave', 'quake-points', onLeave);\n      return () => {\n        clearInterval(interval);\n        map.remove();\n      };\n    });\n\n    // Cleanup function\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.remove();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (mapRef.current) {\n      mapRef.current.setProjection({ name: projection });\n    }\n  }, [projection]);\n\n  async function fetchAndUpdate(initial) {\n    const map = mapRef.current;\n    const past30 = new Date(Date.now() - 30 * 24 * 3600 * 1000).toISOString().split('T')[0];\n    const url = `https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=${past30}&minmagnitude=5`;\n    const res = await fetch(url);\n    const data = await res.json();\n\n    // New quake notifications\n    if (!initial) {\n      const prevIds = (lastQuakesRef.current?.features || []).map(f => f.id);\n      data.features.forEach(f => {\n        if (!prevIds.includes(f.id) && f.properties.mag >= 5) {\n          Notification.permission === 'granted'\n            ? new Notification(`M${f.properties.mag.toFixed(1)} quake`, { body: f.properties.place })\n            : Notification.requestPermission();\n        }\n      });\n    }\n\n    // Update or add quake-points layer\n    if (initial) {\n      map.addSource('quake-points', { type: 'geojson', data });\n      map.addLayer({\n        id: 'quake-points',\n        type: 'circle',\n        source: 'quake-points',\n        paint: {\n          'circle-color': '#E55E5E',\n          'circle-opacity': 0.8,\n          'circle-radius': ['interpolate', ['linear'], ['get', 'mag'], 5, 6, 8, 12, 10, 20]\n        }\n      });\n    } else {\n      map.getSource('quake-points').setData(data);\n    }\n\n    // Build buffers for risk-area\n    const buffers = data.features\n      .filter(f => f.geometry && Array.isArray(f.geometry.coordinates))\n      .map(f =>\n        turfCircle(f.geometry.coordinates, 20, { steps: 64, units: 'kilometers' })\n      );\n    let zoneData;\n    if (buffers.length === 0) {\n      zoneData = { type: 'FeatureCollection', features: [] };\n    } else {\n      // union all buffers, skipping any union errors\n      let unioned = buffers[0];\n      for (let i = 1; i < buffers.length; i++) {\n        try {\n          unioned = turfUnion(unioned, buffers[i]);\n        } catch (err) {\n          console.warn('Skipping invalid union at index', i, err);\n        }\n      }\n      zoneData = { type: 'FeatureCollection', features: [unioned] };\n    }\n\n    // Update or add risk-area layer\n    if (initial) {\n      map.addSource('risk-area', { type: 'geojson', data: zoneData });\n      map.addLayer({\n        id: 'risk-area-fill',\n        type: 'fill',\n        source: 'risk-area',\n        paint: {\n          'fill-color': 'rgba(255,0,0,0.2)',\n          'fill-outline-color': 'rgba(255,0,0,0.6)'\n        }\n      });\n    } else {\n      map.getSource('risk-area').setData(zoneData);\n    }\n\n    lastQuakesRef.current = data;\n  }\n\n  function onHover(e) {\n    const { properties, geometry } = e.features[0];\n    const coords = geometry.coordinates.slice();\n    const date = new Date(properties.time).toLocaleString();\n    popupRef.current\n      .setLngLat(coords)\n      .setHTML(`<strong>${properties.place}</strong><br/>Mag: ${properties.mag.toFixed(1)}<br/>${date}`)\n      .addTo(mapRef.current);\n  }\n  function onLeave() {\n    popupRef.current.remove();\n  }\n\n  function startSpin() {\n    const map = mapRef.current;\n    let frame;\n    const animate = () => {\n      if (!spinRef.current) return;\n      const c = map.getCenter();\n      map.jumpTo({ center: [c.lng - 0.05, c.lat] });\n      frame = requestAnimationFrame(animate);\n    };\n    animate();\n    return () => cancelAnimationFrame(frame);\n  }\n  function toggleSpin() {\n    spinRef.current = !spinRef.current;\n    if (spinRef.current) startSpin();\n  }\n\n  return (\n    <>\n      <div ref={mapContainer} id=\"map\" />\n      <div className=\"controls\">\n        <label>\n          Projection:\n          <select value={projection} onChange={e => setProjection(e.target.value)}>\n            <option value=\"globe\">Globe</option>\n            <option value=\"mercator\">Mercator</option>\n            <option value=\"winkelTripel\">Winkel-Tripel</option>\n            <option value=\"robinson\">Robinson</option>\n          </select>\n        </label>\n        <button onClick={toggleSpin}>Toggle Rotation</button>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}