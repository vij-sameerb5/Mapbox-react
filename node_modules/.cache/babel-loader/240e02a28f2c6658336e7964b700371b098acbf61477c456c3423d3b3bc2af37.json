{"ast":null,"code":"var _jsxFileName = \"/Users/sameershaik/Desktop/mapbox-react/src/mapbox-gl/MapboxGl.js\",\n  _s = $RefreshSig$();\n// src/mapbox-gl/MapboxGl.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport '../App.css';\n\n// Ensure your token is set in .env: REACT_APP_MAPBOX_TOKEN\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_TOKEN;\nexport default function MapboxGl() {\n  _s();\n  const mapContainerRef = useRef(null);\n  const mapRef = useRef(null);\n  const popupRef = useRef(null);\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Check if token is available\n  if (!mapboxgl.accessToken) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        textAlign: 'center',\n        padding: '20px',\n        backgroundColor: '#f0f0f0',\n        border: '1px solid #ccc',\n        borderRadius: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mapbox Token Missing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please add your Mapbox access token to the .env file:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"REACT_APP_MAPBOX_TOKEN=your_token_here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Get your token from: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://account.mapbox.com/\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"https://account.mapbox.com/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n  useEffect(() => {\n    if (!mapContainerRef.current) return;\n    try {\n      // Initialize popup\n      popupRef.current = new mapboxgl.Popup({\n        closeButton: false,\n        closeOnClick: true\n      });\n\n      // Initialize the map only once\n      mapRef.current = new mapboxgl.Map({\n        container: mapContainerRef.current,\n        style: 'mapbox://styles/mapbox/standard-satellite',\n        zoom: 1.5,\n        center: [-90, 40],\n        projection: 'globe',\n        antialias: true,\n        preserveDrawingBuffer: true\n      });\n      const map = mapRef.current;\n\n      // Handle map load errors\n      map.on('error', e => {\n        console.error('Mapbox error:', e);\n        setError('Failed to load map. Please check your internet connection and Mapbox token.');\n      });\n\n      // Wait for map to be fully loaded before proceeding\n      map.on('load', () => {\n        setMapLoaded(true);\n        console.log('Map loaded successfully');\n      });\n\n      // Wait for style to be fully loaded before adding features\n      map.on('style.load', () => {\n        console.log('Style loaded, setting up fog and features');\n\n        // Set fog for the globe effect\n        try {\n          map.setFog({});\n        } catch (e) {\n          console.warn('Fog not supported:', e);\n        }\n\n        // Add earthquake data\n        loadEarthquakeData(map);\n\n        // Initialize spinning\n        initSpin(map);\n      });\n    } catch (error) {\n      console.error('Failed to initialize map:', error);\n      setError('Failed to initialize map. Please refresh the page.');\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.remove();\n      }\n    };\n  }, []);\n\n  // Function to load earthquake data\n  const loadEarthquakeData = map => {\n    const past30 = new Date(Date.now() - 30 * 24 * 3600 * 1000).toISOString().split('T')[0];\n    fetch(`https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=${past30}&minmagnitude=5`).then(res => res.json()).then(data => {\n      if (!map.getSource('earthquakes')) {\n        // Add source & layer\n        map.addSource('earthquakes', {\n          type: 'geojson',\n          data\n        });\n        map.addLayer({\n          id: 'quake-circles',\n          type: 'circle',\n          source: 'earthquakes',\n          paint: {\n            'circle-radius': ['interpolate', ['linear'], ['get', 'mag'], 5, 6, 8, 12, 10, 20],\n            'circle-color': '#E55E5E',\n            'circle-stroke-color': '#FFF',\n            'circle-stroke-width': 1,\n            'circle-opacity': 0.8\n          }\n        });\n\n        // Add click events for popups\n        map.on('click', 'quake-circles', ev => {\n          const {\n            place,\n            mag,\n            time\n          } = ev.features[0].properties;\n          const date = new Date(time).toLocaleString();\n          if (popupRef.current) {\n            popupRef.current.setLngLat(ev.lngLat).setHTML(`<strong>${place}</strong><br/>Mag: ${mag.toFixed(1)}<br/>${date}`).addTo(map);\n          }\n        });\n        map.on('mouseenter', 'quake-circles', () => {\n          map.getCanvas().style.cursor = 'pointer';\n        });\n        map.on('mouseleave', 'quake-circles', () => {\n          map.getCanvas().style.cursor = '';\n        });\n      }\n    }).catch(err => console.error('USGS fetch error:', err));\n  };\n\n  // Show error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        textAlign: 'center',\n        padding: '20px',\n        backgroundColor: '#ffe6e6',\n        border: '1px solid #ff0000',\n        borderRadius: '8px',\n        color: '#cc0000'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Reload Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainerRef,\n      id: \"map\",\n      style: {\n        width: '100%',\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), mapLoaded && /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"btn-spin\",\n      children: \"Pause rotation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }, this), !mapLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        textAlign: 'center',\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\n        padding: '20px',\n        borderRadius: '8px',\n        boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Mapbox Globe...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n// Spin initialization extracted for clarity\n_s(MapboxGl, \"u8nzfPEUKUNZD+JDunCj8E4o790=\");\n_c = MapboxGl;\nfunction initSpin(map) {\n  const secondsPerRevolution = 120;\n  const maxSpinZoom = 5;\n  const slowSpinZoom = 3;\n  let userInteracting = false;\n  let spinEnabled = true;\n  function spinGlobe() {\n    const zoom = map.getZoom();\n    if (!spinEnabled || userInteracting || zoom >= maxSpinZoom) return;\n    let speed = 360 / secondsPerRevolution;\n    if (zoom > slowSpinZoom) {\n      speed *= (maxSpinZoom - zoom) / (maxSpinZoom - slowSpinZoom);\n    }\n    const center = map.getCenter();\n    center.lng -= speed;\n    map.easeTo({\n      center,\n      duration: 1000,\n      easing: t => t\n    });\n  }\n  ['mousedown', 'dragstart', 'zoomstart', 'rotatestart', 'pitchstart'].forEach(e => map.on(e, () => {\n    userInteracting = true;\n  }));\n  ['mouseup', 'dragend', 'zoomend', 'rotateend', 'pitchend'].forEach(e => map.on(e, () => {\n    userInteracting = false;\n    spinGlobe();\n  }));\n  map.on('moveend', spinGlobe);\n  document.getElementById('btn-spin').addEventListener('click', evt => {\n    spinEnabled = !spinEnabled;\n    if (spinEnabled) {\n      spinGlobe();\n      evt.target.textContent = 'Pause rotation';\n    } else {\n      map.stop();\n      evt.target.textContent = 'Start rotation';\n    }\n  });\n  spinGlobe();\n}\nvar _c;\n$RefreshReg$(_c, \"MapboxGl\");","map":{"version":3,"names":["React","useEffect","useRef","useState","mapboxgl","jsxDEV","_jsxDEV","Fragment","_Fragment","accessToken","process","env","REACT_APP_MAPBOX_TOKEN","MapboxGl","_s","mapContainerRef","mapRef","popupRef","mapLoaded","setMapLoaded","error","setError","style","position","top","left","transform","textAlign","padding","backgroundColor","border","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","current","Popup","closeButton","closeOnClick","Map","container","zoom","center","projection","antialias","preserveDrawingBuffer","map","on","e","console","log","setFog","warn","loadEarthquakeData","initSpin","remove","past30","Date","now","toISOString","split","fetch","then","res","json","data","getSource","addSource","type","addLayer","id","source","paint","ev","place","mag","time","features","properties","date","toLocaleString","setLngLat","lngLat","setHTML","toFixed","addTo","getCanvas","cursor","catch","err","color","onClick","window","location","reload","ref","width","height","boxShadow","_c","secondsPerRevolution","maxSpinZoom","slowSpinZoom","userInteracting","spinEnabled","spinGlobe","getZoom","speed","getCenter","lng","easeTo","duration","easing","t","forEach","document","getElementById","addEventListener","evt","textContent","stop","$RefreshReg$"],"sources":["/Users/sameershaik/Desktop/mapbox-react/src/mapbox-gl/MapboxGl.js"],"sourcesContent":["// src/mapbox-gl/MapboxGl.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport '../App.css';\n\n// Ensure your token is set in .env: REACT_APP_MAPBOX_TOKEN\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_TOKEN;\n\nexport default function MapboxGl() {\n  const mapContainerRef = useRef(null);\n  const mapRef = useRef(null);\n  const popupRef = useRef(null);\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Check if token is available\n  if (!mapboxgl.accessToken) {\n    return (\n      <div style={{ \n        position: 'absolute', \n        top: '50%', \n        left: '50%', \n        transform: 'translate(-50%, -50%)',\n        textAlign: 'center',\n        padding: '20px',\n        backgroundColor: '#f0f0f0',\n        border: '1px solid #ccc',\n        borderRadius: '8px'\n      }}>\n        <h3>Mapbox Token Missing</h3>\n        <p>Please add your Mapbox access token to the .env file:</p>\n        <p><code>REACT_APP_MAPBOX_TOKEN=your_token_here</code></p>\n        <p>Get your token from: <a href=\"https://account.mapbox.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://account.mapbox.com/</a></p>\n      </div>\n    );\n  }\n\n  useEffect(() => {\n    if (!mapContainerRef.current) return;\n\n    try {\n      // Initialize popup\n      popupRef.current = new mapboxgl.Popup({ \n        closeButton: false, \n        closeOnClick: true \n      });\n\n      // Initialize the map only once\n      mapRef.current = new mapboxgl.Map({\n        container: mapContainerRef.current,\n        style: 'mapbox://styles/mapbox/standard-satellite',\n        zoom: 1.5,\n        center: [-90, 40],\n        projection: 'globe',\n        antialias: true,\n        preserveDrawingBuffer: true\n      });\n\n      const map = mapRef.current;\n\n      // Handle map load errors\n      map.on('error', (e) => {\n        console.error('Mapbox error:', e);\n        setError('Failed to load map. Please check your internet connection and Mapbox token.');\n      });\n\n      // Wait for map to be fully loaded before proceeding\n      map.on('load', () => {\n        setMapLoaded(true);\n        console.log('Map loaded successfully');\n      });\n\n      // Wait for style to be fully loaded before adding features\n      map.on('style.load', () => {\n        console.log('Style loaded, setting up fog and features');\n        \n        // Set fog for the globe effect\n        try {\n          map.setFog({});\n        } catch (e) {\n          console.warn('Fog not supported:', e);\n        }\n\n        // Add earthquake data\n        loadEarthquakeData(map);\n        \n        // Initialize spinning\n        initSpin(map);\n      });\n\n    } catch (error) {\n      console.error('Failed to initialize map:', error);\n      setError('Failed to initialize map. Please refresh the page.');\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.remove();\n      }\n    };\n  }, []);\n\n  // Function to load earthquake data\n  const loadEarthquakeData = (map) => {\n    const past30 = new Date(Date.now() - 30 * 24 * 3600 * 1000)\n      .toISOString()\n      .split('T')[0];\n\n    fetch(\n      `https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=${past30}&minmagnitude=5`\n    )\n      .then(res => res.json())\n      .then(data => {\n        if (!map.getSource('earthquakes')) {\n          // Add source & layer\n          map.addSource('earthquakes', { type: 'geojson', data });\n          map.addLayer({\n            id: 'quake-circles',\n            type: 'circle',\n            source: 'earthquakes',\n            paint: {\n              'circle-radius': [\n                'interpolate', ['linear'], ['get', 'mag'],\n                5, 6, 8, 12, 10, 20\n              ],\n              'circle-color': '#E55E5E',\n              'circle-stroke-color': '#FFF',\n              'circle-stroke-width': 1,\n              'circle-opacity': 0.8,\n            },\n          });\n\n          // Add click events for popups\n          map.on('click', 'quake-circles', ev => {\n            const { place, mag, time } = ev.features[0].properties;\n            const date = new Date(time).toLocaleString();\n            if (popupRef.current) {\n              popupRef.current\n                .setLngLat(ev.lngLat)\n                .setHTML(\n                  `<strong>${place}</strong><br/>Mag: ${mag.toFixed(1)}<br/>${date}`\n                )\n                .addTo(map);\n            }\n          });\n\n          map.on('mouseenter', 'quake-circles', () => {\n            map.getCanvas().style.cursor = 'pointer';\n          });\n          \n          map.on('mouseleave', 'quake-circles', () => {\n            map.getCanvas().style.cursor = '';\n          });\n        }\n      })\n      .catch(err => console.error('USGS fetch error:', err));\n  };\n\n  // Show error state\n  if (error) {\n    return (\n      <div style={{ \n        position: 'absolute', \n        top: '50%', \n        left: '50%', \n        transform: 'translate(-50%, -50%)',\n        textAlign: 'center',\n        padding: '20px',\n        backgroundColor: '#ffe6e6',\n        border: '1px solid #ff0000',\n        borderRadius: '8px',\n        color: '#cc0000'\n      }}>\n        <h3>Error</h3>\n        <p>{error}</p>\n        <button onClick={() => window.location.reload()}>Reload Page</button>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div ref={mapContainerRef} id=\"map\" style={{ width: '100%', height: '100vh' }} />\n      {mapLoaded && <button id=\"btn-spin\">Pause rotation</button>}\n      {!mapLoaded && (\n        <div style={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          textAlign: 'center',\n          backgroundColor: 'rgba(255, 255, 255, 0.9)',\n          padding: '20px',\n          borderRadius: '8px',\n          boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\n        }}>\n          <p>Loading Mapbox Globe...</p>\n        </div>\n      )}\n    </>\n  );\n}\n\n// Spin initialization extracted for clarity\nfunction initSpin(map) {\n  const secondsPerRevolution = 120;\n  const maxSpinZoom = 5;\n  const slowSpinZoom = 3;\n  let userInteracting = false;\n  let spinEnabled = true;\n\n  function spinGlobe() {\n    const zoom = map.getZoom();\n    if (!spinEnabled || userInteracting || zoom >= maxSpinZoom) return;\n    let speed = 360 / secondsPerRevolution;\n    if (zoom > slowSpinZoom) {\n      speed *= (maxSpinZoom - zoom) / (maxSpinZoom - slowSpinZoom);\n    }\n    const center = map.getCenter();\n    center.lng -= speed;\n    map.easeTo({ center, duration: 1000, easing: t => t });\n  }\n\n  ['mousedown','dragstart','zoomstart','rotatestart','pitchstart']\n    .forEach(e => map.on(e, () => { userInteracting = true; }));\n  ['mouseup','dragend','zoomend','rotateend','pitchend']\n    .forEach(e => map.on(e, () => { userInteracting = false; spinGlobe(); }));\n  map.on('moveend', spinGlobe);\n\n  document.getElementById('btn-spin')\n    .addEventListener('click', evt => {\n      spinEnabled = !spinEnabled;\n      if (spinEnabled) {\n        spinGlobe();\n        evt.target.textContent = 'Pause rotation';\n      } else {\n        map.stop();\n        evt.target.textContent = 'Start rotation';\n      }\n    });\n\n  spinGlobe();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}