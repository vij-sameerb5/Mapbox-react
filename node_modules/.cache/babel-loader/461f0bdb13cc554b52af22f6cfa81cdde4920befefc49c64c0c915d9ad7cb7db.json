{"ast":null,"code":"var _jsxFileName = \"/Users/sameershaik/Desktop/mapbox-react/src/mapbox-gl/MapboxGl.js\",\n  _s = $RefreshSig$();\n// src/mapbox-gl/MapboxGl.js\nimport React, { useEffect, useRef } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport '../App.css';\n\n// Ensure your token is set in .env: REACT_APP_MAPBOX_TOKEN\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_TOKEN;\nexport default function MapboxGl() {\n  _s();\n  // Check if token is available\n  if (!mapboxgl.accessToken) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        textAlign: 'center',\n        padding: '20px',\n        backgroundColor: '#f0f0f0',\n        border: '1px solid #ccc',\n        borderRadius: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mapbox Token Missing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please add your Mapbox access token to the .env file:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"REACT_APP_MAPBOX_TOKEN=your_token_here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Get your token from: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://account.mapbox.com/\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"https://account.mapbox.com/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n  // Define the ref for the map container!\n  const mapContainerRef = useRef(null);\n  const mapRef = useRef(null);\n  const popupRef = useRef(new mapboxgl.Popup({\n    closeButton: false,\n    closeOnClick: true\n  }));\n  useEffect(() => {\n    // Initialize the map only once\n    mapRef.current = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/mapbox/standard-satellite',\n      zoom: 1.5,\n      center: [-90, 40],\n      projection: 'globe',\n      antialias: true\n    });\n    const map = mapRef.current;\n    map.on('style.load', () => {\n      map.setFog({});\n\n      // Fetch earthquakes (past 30 days, M ≥ 5)\n      const past30 = new Date(Date.now() - 30 * 24 * 3600 * 1000).toISOString().split('T')[0];\n      fetch(`https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=${past30}&minmagnitude=5`).then(res => res.json()).then(data => {\n        // Add source & layer\n        map.addSource('earthquakes', {\n          type: 'geojson',\n          data\n        });\n        map.addLayer({\n          id: 'quake-circles',\n          type: 'circle',\n          source: 'earthquakes',\n          paint: {\n            'circle-radius': ['interpolate', ['linear'], ['get', 'mag'], 5, 6, 8, 12, 10, 20],\n            'circle-color': '#E55E5E',\n            'circle-stroke-color': '#FFF',\n            'circle-stroke-width': 1,\n            'circle-opacity': 0.8\n          }\n        });\n\n        // Popups\n        map.on('click', 'quake-circles', ev => {\n          const {\n            place,\n            mag,\n            time\n          } = ev.features[0].properties;\n          const date = new Date(time).toLocaleString();\n          popupRef.current.setLngLat(ev.lngLat).setHTML(`<strong>${place}</strong><br/>Mag: ${mag.toFixed(1)}<br/>${date}`).addTo(map);\n        });\n        map.on('mouseenter', 'quake-circles', () => map.getCanvas().style.cursor = 'pointer');\n        map.on('mouseleave', 'quake-circles', () => map.getCanvas().style.cursor = '');\n      }).catch(err => console.error('USGS fetch error:', err));\n\n      // Spin logic\n      initSpin(map);\n    });\n\n    // Cleanup on unmount\n    return () => {\n      var _mapRef$current;\n      return (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.remove();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainerRef,\n      id: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"btn-spin\",\n      children: \"Pause rotation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n// Spin initialization extracted for clarity\n_s(MapboxGl, \"cNIaSTIvtUB/qz6PW3pfvAN+Xw4=\");\n_c = MapboxGl;\nfunction initSpin(map) {\n  const secondsPerRevolution = 120;\n  const maxSpinZoom = 5;\n  const slowSpinZoom = 3;\n  let userInteracting = false;\n  let spinEnabled = true;\n  function spinGlobe() {\n    const zoom = map.getZoom();\n    if (!spinEnabled || userInteracting || zoom >= maxSpinZoom) return;\n    let speed = 360 / secondsPerRevolution;\n    if (zoom > slowSpinZoom) {\n      speed *= (maxSpinZoom - zoom) / (maxSpinZoom - slowSpinZoom);\n    }\n    const center = map.getCenter();\n    center.lng -= speed;\n    map.easeTo({\n      center,\n      duration: 1000,\n      easing: t => t\n    });\n  }\n  ['mousedown', 'dragstart', 'zoomstart', 'rotatestart', 'pitchstart'].forEach(e => map.on(e, () => {\n    userInteracting = true;\n  }));\n  ['mouseup', 'dragend', 'zoomend', 'rotateend', 'pitchend'].forEach(e => map.on(e, () => {\n    userInteracting = false;\n    spinGlobe();\n  }));\n  map.on('moveend', spinGlobe);\n  document.getElementById('btn-spin').addEventListener('click', evt => {\n    spinEnabled = !spinEnabled;\n    if (spinEnabled) {\n      spinGlobe();\n      evt.target.textContent = 'Pause rotation';\n    } else {\n      map.stop();\n      evt.target.textContent = 'Start rotation';\n    }\n  });\n  spinGlobe();\n}\nvar _c;\n$RefreshReg$(_c, \"MapboxGl\");","map":{"version":3,"names":["React","useEffect","useRef","mapboxgl","jsxDEV","_jsxDEV","Fragment","_Fragment","accessToken","process","env","REACT_APP_MAPBOX_TOKEN","MapboxGl","_s","style","position","top","left","transform","textAlign","padding","backgroundColor","border","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","mapContainerRef","mapRef","popupRef","Popup","closeButton","closeOnClick","current","Map","container","zoom","center","projection","antialias","map","on","setFog","past30","Date","now","toISOString","split","fetch","then","res","json","data","addSource","type","addLayer","id","source","paint","ev","place","mag","time","features","properties","date","toLocaleString","setLngLat","lngLat","setHTML","toFixed","addTo","getCanvas","cursor","catch","err","console","error","initSpin","_mapRef$current","remove","ref","_c","secondsPerRevolution","maxSpinZoom","slowSpinZoom","userInteracting","spinEnabled","spinGlobe","getZoom","speed","getCenter","lng","easeTo","duration","easing","t","forEach","e","document","getElementById","addEventListener","evt","textContent","stop","$RefreshReg$"],"sources":["/Users/sameershaik/Desktop/mapbox-react/src/mapbox-gl/MapboxGl.js"],"sourcesContent":["// src/mapbox-gl/MapboxGl.js\nimport React, { useEffect, useRef } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport '../App.css';\n\n// Ensure your token is set in .env: REACT_APP_MAPBOX_TOKEN\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_TOKEN;\n\nexport default function MapboxGl() {\n  // Check if token is available\n  if (!mapboxgl.accessToken) {\n    return (\n      <div style={{ \n        position: 'absolute', \n        top: '50%', \n        left: '50%', \n        transform: 'translate(-50%, -50%)',\n        textAlign: 'center',\n        padding: '20px',\n        backgroundColor: '#f0f0f0',\n        border: '1px solid #ccc',\n        borderRadius: '8px'\n      }}>\n        <h3>Mapbox Token Missing</h3>\n        <p>Please add your Mapbox access token to the .env file:</p>\n        <p><code>REACT_APP_MAPBOX_TOKEN=your_token_here</code></p>\n        <p>Get your token from: <a href=\"https://account.mapbox.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://account.mapbox.com/</a></p>\n      </div>\n    );\n  }\n  // Define the ref for the map container!\n  const mapContainerRef = useRef(null);\n  const mapRef = useRef(null);\n  const popupRef = useRef(\n    new mapboxgl.Popup({ closeButton: false, closeOnClick: true })\n  );\n\n  useEffect(() => {\n    // Initialize the map only once\n    mapRef.current = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/mapbox/standard-satellite',\n      zoom: 1.5,\n      center: [-90, 40],\n      projection: 'globe',\n      antialias: true,\n    });\n\n    const map = mapRef.current;\n\n    map.on('style.load', () => {\n      map.setFog({});\n\n      // Fetch earthquakes (past 30 days, M ≥ 5)\n      const past30 = new Date(Date.now() - 30 * 24 * 3600 * 1000)\n        .toISOString()\n        .split('T')[0];\n\n      fetch(\n        `https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=${past30}&minmagnitude=5`\n      )\n        .then(res => res.json())\n        .then(data => {\n          // Add source & layer\n          map.addSource('earthquakes', { type: 'geojson', data });\n          map.addLayer({\n            id: 'quake-circles',\n            type: 'circle',\n            source: 'earthquakes',\n            paint: {\n              'circle-radius': [\n                'interpolate', ['linear'], ['get', 'mag'],\n                5, 6, 8, 12, 10, 20\n              ],\n              'circle-color': '#E55E5E',\n              'circle-stroke-color': '#FFF',\n              'circle-stroke-width': 1,\n              'circle-opacity': 0.8,\n            },\n          });\n\n          // Popups\n          map.on('click', 'quake-circles', ev => {\n            const { place, mag, time } = ev.features[0].properties;\n            const date = new Date(time).toLocaleString();\n            popupRef.current\n              .setLngLat(ev.lngLat)\n              .setHTML(\n                `<strong>${place}</strong><br/>Mag: ${mag.toFixed(1)}<br/>${date}`\n              )\n              .addTo(map);\n          });\n          map.on('mouseenter', 'quake-circles', () =>\n            map.getCanvas().style.cursor = 'pointer'\n          );\n          map.on('mouseleave', 'quake-circles', () =>\n            map.getCanvas().style.cursor = ''\n          );\n        })\n        .catch(err => console.error('USGS fetch error:', err));\n\n      // Spin logic\n      initSpin(map);\n    });\n\n    // Cleanup on unmount\n    return () => mapRef.current?.remove();\n  }, []);\n\n  return (\n    <>\n      <div ref={mapContainerRef} id=\"map\" />\n      <button id=\"btn-spin\">Pause rotation</button>\n    </>\n  );\n}\n\n// Spin initialization extracted for clarity\nfunction initSpin(map) {\n  const secondsPerRevolution = 120;\n  const maxSpinZoom = 5;\n  const slowSpinZoom = 3;\n  let userInteracting = false;\n  let spinEnabled = true;\n\n  function spinGlobe() {\n    const zoom = map.getZoom();\n    if (!spinEnabled || userInteracting || zoom >= maxSpinZoom) return;\n    let speed = 360 / secondsPerRevolution;\n    if (zoom > slowSpinZoom) {\n      speed *= (maxSpinZoom - zoom) / (maxSpinZoom - slowSpinZoom);\n    }\n    const center = map.getCenter();\n    center.lng -= speed;\n    map.easeTo({ center, duration: 1000, easing: t => t });\n  }\n\n  ['mousedown','dragstart','zoomstart','rotatestart','pitchstart']\n    .forEach(e => map.on(e, () => { userInteracting = true; }));\n  ['mouseup','dragend','zoomend','rotateend','pitchend']\n    .forEach(e => map.on(e, () => { userInteracting = false; spinGlobe(); }));\n  map.on('moveend', spinGlobe);\n\n  document.getElementById('btn-spin')\n    .addEventListener('click', evt => {\n      spinEnabled = !spinEnabled;\n      if (spinEnabled) {\n        spinGlobe();\n        evt.target.textContent = 'Pause rotation';\n      } else {\n        map.stop();\n        evt.target.textContent = 'Start rotation';\n      }\n    });\n\n  spinGlobe();\n}\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,8BAA8B;AACrC,OAAO,YAAY;;AAEnB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACAJ,QAAQ,CAACK,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAEzD,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC;EACA,IAAI,CAACV,QAAQ,CAACK,WAAW,EAAE;IACzB,oBACEH,OAAA;MAAKS,KAAK,EAAE;QACVC,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,KAAK;QACVC,IAAI,EAAE,KAAK;QACXC,SAAS,EAAE,uBAAuB;QAClCC,SAAS,EAAE,QAAQ;QACnBC,OAAO,EAAE,MAAM;QACfC,eAAe,EAAE,SAAS;QAC1BC,MAAM,EAAE,gBAAgB;QACxBC,YAAY,EAAE;MAChB,CAAE;MAAAC,QAAA,gBACAnB,OAAA;QAAAmB,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BvB,OAAA;QAAAmB,QAAA,EAAG;MAAqD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC5DvB,OAAA;QAAAmB,QAAA,eAAGnB,OAAA;UAAAmB,QAAA,EAAM;QAAsC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC1DvB,OAAA;QAAAmB,QAAA,GAAG,uBAAqB,eAAAnB,OAAA;UAAGwB,IAAI,EAAC,6BAA6B;UAACC,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAP,QAAA,EAAC;QAA2B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxI,CAAC;EAEV;EACA;EACA,MAAMI,eAAe,GAAG9B,MAAM,CAAC,IAAI,CAAC;EACpC,MAAM+B,MAAM,GAAG/B,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMgC,QAAQ,GAAGhC,MAAM,CACrB,IAAIC,QAAQ,CAACgC,KAAK,CAAC;IAAEC,WAAW,EAAE,KAAK;IAAEC,YAAY,EAAE;EAAK,CAAC,CAC/D,CAAC;EAEDpC,SAAS,CAAC,MAAM;IACd;IACAgC,MAAM,CAACK,OAAO,GAAG,IAAInC,QAAQ,CAACoC,GAAG,CAAC;MAChCC,SAAS,EAAER,eAAe,CAACM,OAAO;MAClCxB,KAAK,EAAE,2CAA2C;MAClD2B,IAAI,EAAE,GAAG;MACTC,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC;MACjBC,UAAU,EAAE,OAAO;MACnBC,SAAS,EAAE;IACb,CAAC,CAAC;IAEF,MAAMC,GAAG,GAAGZ,MAAM,CAACK,OAAO;IAE1BO,GAAG,CAACC,EAAE,CAAC,YAAY,EAAE,MAAM;MACzBD,GAAG,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC;;MAEd;MACA,MAAMC,MAAM,GAAG,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,CACxDC,WAAW,CAAC,CAAC,CACbC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAEhBC,KAAK,CACH,6EAA6EL,MAAM,iBACrF,CAAC,CACEM,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;QACZ;QACAZ,GAAG,CAACa,SAAS,CAAC,aAAa,EAAE;UAAEC,IAAI,EAAE,SAAS;UAAEF;QAAK,CAAC,CAAC;QACvDZ,GAAG,CAACe,QAAQ,CAAC;UACXC,EAAE,EAAE,eAAe;UACnBF,IAAI,EAAE,QAAQ;UACdG,MAAM,EAAE,aAAa;UACrBC,KAAK,EAAE;YACL,eAAe,EAAE,CACf,aAAa,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EACzC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CACpB;YACD,cAAc,EAAE,SAAS;YACzB,qBAAqB,EAAE,MAAM;YAC7B,qBAAqB,EAAE,CAAC;YACxB,gBAAgB,EAAE;UACpB;QACF,CAAC,CAAC;;QAEF;QACAlB,GAAG,CAACC,EAAE,CAAC,OAAO,EAAE,eAAe,EAAEkB,EAAE,IAAI;UACrC,MAAM;YAAEC,KAAK;YAAEC,GAAG;YAAEC;UAAK,CAAC,GAAGH,EAAE,CAACI,QAAQ,CAAC,CAAC,CAAC,CAACC,UAAU;UACtD,MAAMC,IAAI,GAAG,IAAIrB,IAAI,CAACkB,IAAI,CAAC,CAACI,cAAc,CAAC,CAAC;UAC5CrC,QAAQ,CAACI,OAAO,CACbkC,SAAS,CAACR,EAAE,CAACS,MAAM,CAAC,CACpBC,OAAO,CACN,WAAWT,KAAK,sBAAsBC,GAAG,CAACS,OAAO,CAAC,CAAC,CAAC,QAAQL,IAAI,EAClE,CAAC,CACAM,KAAK,CAAC/B,GAAG,CAAC;QACf,CAAC,CAAC;QACFA,GAAG,CAACC,EAAE,CAAC,YAAY,EAAE,eAAe,EAAE,MACpCD,GAAG,CAACgC,SAAS,CAAC,CAAC,CAAC/D,KAAK,CAACgE,MAAM,GAAG,SACjC,CAAC;QACDjC,GAAG,CAACC,EAAE,CAAC,YAAY,EAAE,eAAe,EAAE,MACpCD,GAAG,CAACgC,SAAS,CAAC,CAAC,CAAC/D,KAAK,CAACgE,MAAM,GAAG,EACjC,CAAC;MACH,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEF,GAAG,CAAC,CAAC;;MAExD;MACAG,QAAQ,CAACtC,GAAG,CAAC;IACf,CAAC,CAAC;;IAEF;IACA,OAAO;MAAA,IAAAuC,eAAA;MAAA,QAAAA,eAAA,GAAMnD,MAAM,CAACK,OAAO,cAAA8C,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,CAAC,CAAC;IAAA;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhF,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MAAKiF,GAAG,EAAEtD,eAAgB;MAAC6B,EAAE,EAAC;IAAK;MAAApC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCvB,OAAA;MAAQwD,EAAE,EAAC,UAAU;MAAArC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC7C,CAAC;AAEP;;AAEA;AAAAf,EAAA,CA7GwBD,QAAQ;AAAA2E,EAAA,GAAR3E,QAAQ;AA8GhC,SAASuE,QAAQA,CAACtC,GAAG,EAAE;EACrB,MAAM2C,oBAAoB,GAAG,GAAG;EAChC,MAAMC,WAAW,GAAG,CAAC;EACrB,MAAMC,YAAY,GAAG,CAAC;EACtB,IAAIC,eAAe,GAAG,KAAK;EAC3B,IAAIC,WAAW,GAAG,IAAI;EAEtB,SAASC,SAASA,CAAA,EAAG;IACnB,MAAMpD,IAAI,GAAGI,GAAG,CAACiD,OAAO,CAAC,CAAC;IAC1B,IAAI,CAACF,WAAW,IAAID,eAAe,IAAIlD,IAAI,IAAIgD,WAAW,EAAE;IAC5D,IAAIM,KAAK,GAAG,GAAG,GAAGP,oBAAoB;IACtC,IAAI/C,IAAI,GAAGiD,YAAY,EAAE;MACvBK,KAAK,IAAI,CAACN,WAAW,GAAGhD,IAAI,KAAKgD,WAAW,GAAGC,YAAY,CAAC;IAC9D;IACA,MAAMhD,MAAM,GAAGG,GAAG,CAACmD,SAAS,CAAC,CAAC;IAC9BtD,MAAM,CAACuD,GAAG,IAAIF,KAAK;IACnBlD,GAAG,CAACqD,MAAM,CAAC;MAAExD,MAAM;MAAEyD,QAAQ,EAAE,IAAI;MAAEC,MAAM,EAAEC,CAAC,IAAIA;IAAE,CAAC,CAAC;EACxD;EAEA,CAAC,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,aAAa,EAAC,YAAY,CAAC,CAC7DC,OAAO,CAACC,CAAC,IAAI1D,GAAG,CAACC,EAAE,CAACyD,CAAC,EAAE,MAAM;IAAEZ,eAAe,GAAG,IAAI;EAAE,CAAC,CAAC,CAAC;EAC7D,CAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,WAAW,EAAC,UAAU,CAAC,CACnDW,OAAO,CAACC,CAAC,IAAI1D,GAAG,CAACC,EAAE,CAACyD,CAAC,EAAE,MAAM;IAAEZ,eAAe,GAAG,KAAK;IAAEE,SAAS,CAAC,CAAC;EAAE,CAAC,CAAC,CAAC;EAC3EhD,GAAG,CAACC,EAAE,CAAC,SAAS,EAAE+C,SAAS,CAAC;EAE5BW,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAChCC,gBAAgB,CAAC,OAAO,EAAEC,GAAG,IAAI;IAChCf,WAAW,GAAG,CAACA,WAAW;IAC1B,IAAIA,WAAW,EAAE;MACfC,SAAS,CAAC,CAAC;MACXc,GAAG,CAAC7E,MAAM,CAAC8E,WAAW,GAAG,gBAAgB;IAC3C,CAAC,MAAM;MACL/D,GAAG,CAACgE,IAAI,CAAC,CAAC;MACVF,GAAG,CAAC7E,MAAM,CAAC8E,WAAW,GAAG,gBAAgB;IAC3C;EACF,CAAC,CAAC;EAEJf,SAAS,CAAC,CAAC;AACb;AAAC,IAAAN,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}